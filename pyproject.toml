[project]
name = "statv"
version = "0.3.1"
description = "a uniform status implementation for graia project"
authors = [
    {name = "GreyElaina", email = "GreyElaina@outlook.com"},
]
dependencies = []
requires-python = ">=3.8"
readme = "README.md"
license = {text = "MIT"}

[project.optional-dependencies]
[tool.pdm]
[tool.pdm.dev-dependencies]
dev = [
    "black~=22.6",
    "isort~=5.10",
    "pytest~=7.1",
    "pytest-asyncio~=0.19",
    "coverage~=6.4",
]

[build-system]
requires = ["pdm-pep517>=0.12.0"]
build-backend = "pdm.pep517.api"

[tool.black]
line-length = 120

[tool.isort]
profile = "black"

[tool.coverage.run]
branch = true
source = ["."]
omit = ["test/*", "test.py"]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # standard pragma
    "pragma: no cover",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
    "if (typing\\.)?TYPE_CHECKING( is True)?:",
    "\\.\\.\\.",
    "pass",
    # Don't complain about abstract methods, they aren't run:
    "@(abc\\.)?abstractmethod",
    # Don't complain overload method / functions
    "@(typing\\.)?overload",
    # don't complain __repr__ and __str__ and __repr_args__ for representation
    "def __repr__",
    "def __str__",
    "def __repr_args__",
    "except ImportError:", # Don't complain about import fallback
]
